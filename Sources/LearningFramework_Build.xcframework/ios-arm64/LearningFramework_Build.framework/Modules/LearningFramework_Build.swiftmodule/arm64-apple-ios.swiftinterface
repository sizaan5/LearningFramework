// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name LearningFramework_Build
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import LearningFramework_Build
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc public protocol LearningFrameworkDelegate {
  @objc optional func click(value: Any)
  @objc optional func click()
}
extension UIKit.UIView {
  @_Concurrency.MainActor(unsafe) public class func instanceFromNib<T>(type: T.Type) -> T where T : UIKit.UIView
}
extension UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) public class func register<T>(type: T.Type) -> T where T : UIKit.UIViewController
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class Learning1ViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) public var delegate: (any LearningFramework_Build.LearningFrameworkDelegate)?
  @_Concurrency.MainActor(unsafe) public var textMessage: Swift.String
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public class LearningFrameworkCoordinator {
  public var navigationController: UIKit.UINavigationController?
  public static var navController: UIKit.UINavigationController?
  public init(navigationController: UIKit.UINavigationController)
  public func start()
  @objc deinit
}
